/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.event.ItemEvent;
import java.io.File;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.commons.io.FileUtils;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;
import processclass.ProcessOutput;

/**
 *
 * @author hnam1
 */
public class FormViewer extends javax.swing.JFrame {

    private String currentFolder = "";

    /**
     * Creates new form FormViewer
     */
    public FormViewer() {
        initComponents();
        setExtendedState(6);
        loadAllDocument();

        jcbDocument.addItemListener((ItemEvent e) -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                String data = e.getItem().toString();
                if (data.equals("--- Chọn tài liệu ---")) {
                    currentFolder = "";
                } else {
                    currentFolder = "docs\\" + data;
                }
            }
            if (!currentFolder.isEmpty()) {
                openpdf(currentFolder + "\\document.pdf");
            } else {
                clearpdf();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jbtnAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcbDocument = new javax.swing.JComboBox<>();
        jbtnReadAloud = new javax.swing.JButton();
        jbtnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jbtnAdd.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jbtnAdd.setText("Thêm...");
        jbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tài liệu:");

        jcbDocument.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jcbDocument.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtnReadAloud.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jbtnReadAloud.setText("Đọc thành tiếng");
        jbtnReadAloud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReadAloudActionPerformed(evt);
            }
        });

        jbtnDelete.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jbtnDelete.setText("Xóa tài liệu này");
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnReadAloud, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnReadAloud, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                        .addComponent(jbtnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActionPerformed
        FormAddDocument add = new FormAddDocument();
        add.setVisible(true);

    }//GEN-LAST:event_jbtnAddActionPerformed

    private void jbtnReadAloudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReadAloudActionPerformed
        if("".equals(currentFolder)){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài liệu.");
            return;
        }
        File file = new File(currentFolder + "\\final.wav");
        boolean play = false;
        if (file.isFile()) {
            play = true;
        } else {
            int result = JOptionPane.showConfirmDialog(null,
                    "Chưa có file âm thanh, bạn có muốn tạo? (sẽ mất khoảng vài phút)",
                    "Tạo âm thanh",
                    JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.INFORMATION_MESSAGE);
            if (result == JOptionPane.OK_OPTION) {
                String fileData = scrappingText(currentFolder + "\\document.pdf");
                String[] processsedData = ProcessOutput.ProcessString(fileData);
                ProcessOutput.DownloadBulk(processsedData, currentFolder);
                try {
                    ProcessOutput.mergeAudio(currentFolder, currentFolder + "\\final.wav");
                } catch (UnsupportedAudioFileException | IOException ex) {
                    Logger.getLogger(FormViewer.class.getName()).log(Level.SEVERE, null, ex);
                }
                play = true;
            }
        }
        if (play) {
            reading(currentFolder + "\\final.wav");
        }
    }//GEN-LAST:event_jbtnReadAloudActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        if("".equals(currentFolder)){
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tài liệu.");
            return;
        }
        try {
            if (!currentFolder.isEmpty()) {
                FileUtils.deleteDirectory(new File(currentFolder));
                System.out.println("Deleted !");
            }
        } catch (IOException ex) {
            Logger.getLogger(FormViewer.class.getName()).log(Level.SEVERE, null, ex);
        }
        loadAllDocument();
        jcbDocument.setSelectedIndex(0);
        clearpdf();
                
    }//GEN-LAST:event_jbtnDeleteActionPerformed
    
    public static FormViewer mainframe;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            mainframe = new FormViewer();
            mainframe.setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAdd;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnReadAloud;
    private javax.swing.JComboBox<String> jcbDocument;
    // End of variables declaration//GEN-END:variables

    private void openpdf(String file) {

        try {
            SwingController control = new SwingController();
            SwingViewBuilder factry = new SwingViewBuilder(control);
            JPanel veiwerCompntpnl = factry.buildViewerPanel();
            ComponentKeyBinding.install(control, veiwerCompntpnl);
            control.getDocumentViewController().setAnnotationCallback(
                    new org.icepdf.ri.common.MyAnnotationCallback(
                            control.getDocumentViewController()));
            control.openDocument(file);
            jScrollPane1.setViewportView(veiwerCompntpnl);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Cannot Load Pdf");
        }
    }

    private void clearpdf() {
        jScrollPane1.setViewportView(new JPanel());
    }

    private String scrappingText(String file) {
        String data = "";
        PDDocument doc;
        StringWriter sw;
        try {
            File input = new File(file);
            doc = PDDocument.load(input);

            System.out.println(doc.getNumberOfPages());
            PDFTextStripper stripper = new PDFTextStripper();
            stripper.setStartPage(1);
            stripper.setEndPage(doc.getNumberOfPages());
            sw = new StringWriter();
            stripper.writeText(doc, sw);
            data = sw.toString();
            System.out.println(data);
            sw.close();
            doc.close();
        } catch (IOException ex) {
            System.out.println(ex);
        }
        return data;
    }

    private void reading(String fileName) {
        FormAudio audio = new FormAudio(fileName);
        audio.setVisible(true);
    }

    private String[] loadData() {

        File[] directories = new File("docs").listFiles(File::isDirectory);
        new File("").getName();
        String[] strArray = Arrays.stream(directories)
                .map(File::getName)
                .toArray(String[]::new);
        return strArray;
    }

    public void loadAllDocument() {
        String[] strArray = loadData();
        jcbDocument.setModel(new DefaultComboBoxModel<>(strArray));
    }
}
